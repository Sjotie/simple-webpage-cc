# This is the name of your workflow - it appears in the Actions tab
name: Deploy to Railway

# "on" defines when this workflow runs
on:
  # Run on push to main branch
  push:
    branches:
      - main
  # Also run on pull requests to main (for testing, but not deploying)
  pull_request:
    branches:
      - main

# Jobs are the different tasks your workflow performs
jobs:
  # First job: Run tests
  test:
    # The type of virtual machine to run on
    runs-on: ubuntu-latest
    
    # Matrix strategy lets you test on multiple versions
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    # Steps are individual tasks within a job
    steps:
    # Step 1: Check out your code
    - uses: actions/checkout@v4
    
    # Step 2: Set up Node.js
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'  # Cache dependencies for faster builds
    
    # Step 3: Install your project dependencies
    - name: Install dependencies
      run: npm ci  # ci is faster than install for automated environments
    
    # Step 4: Run tests (if you have any)
    - name: Run tests
      run: npm test --if-present  # --if-present means skip if no test script
    
    # Step 5: Run linter (if configured)
    - name: Run linter
      run: npm run lint --if-present

  # Second job: Deploy to Railway
  deploy:
    runs-on: ubuntu-latest
    needs: test  # This job only runs after 'test' succeeds
    # Only deploy on pushes to main (not on pull requests)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    # Check out code again (each job starts fresh)
    - uses: actions/checkout@v4
    
    # Deploy using Railway's GitHub Action
    - name: Deploy to Railway
      uses: bervProject/railway-deploy@main
      with:
        # RAILWAY_TOKEN must be added to your repository secrets
        railway_token: ${{ secrets.RAILWAY_TOKEN }}
        service: simple-webpage-service